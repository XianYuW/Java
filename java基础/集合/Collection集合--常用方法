java.util.Collection集合是所有单列集合的父接口，因此定义了单列集合(List和Set)通用的一些方法，可以操作所有的单列集合。
方法：
    public boolean add(E e):把给定的对象添加到当前集合中
    public void clear():清空集合中所有的元素
    public boolean remove(E e):把给定的对象在当前集合中删除
    public boolean contains(E e):判断当前集合中是否包含给定的对象
    public boolean isEmpty():判断当前集合是否为空
    public int size():返回集合中元素的个数
    public Object[] toArray():把集合中的元素，存储到数组中
    
//代码练习
public class DemoCollection {
	public static void main(String[] args) {
		//创建集合对象，可以使用多态
		Collection<String> coll = new ArrayList<>();
		System.out.println(coll);//[] ,重写了toString方法
		
		/**
		 * public boolean add(E e):把给定的对象添加到当前集合中
		 * 返回值试一个boolean类型的值，一般是true，所以不用接收
		 */
		boolean b1 = coll.add("张三");
		System.out.println(b1);//true
		System.out.println(coll);//[张三]
		coll.add("李四");
		coll.add("王五");
		coll.add("赵六");
		coll.add("田七");
		System.out.println(coll);//[张三, 李四, 王五, 赵六, 田七]
		/**
		 * public boolean remove(E e):把给定的对象在当前集合中删除
		 * 返回值是bollean值，集合中存在元素，删除元素，返回true
		 * 						不存在元素，删除失败，返回false
		 */
		boolean b2 = coll.remove("赵六");
		System.out.println(b2);//true
		System.out.println(coll);//[张三, 李四, 王五, 田七]
		
		boolean b3 = coll.remove("赵四");
		System.out.println("b3:" + b3);//b3:false
		/**
		 *  public boolean contains(E e):判断当前集合中是否包含给定的对象
		 *  包含返回true
		 *  不包含返回false
		 */
		boolean b4 = coll.contains("李四");
		System.out.println("b4:" + b4);//b4:true
		
		boolean b5 = coll.contains("赵四");
		System.out.println("b5:" + b5);//b5:false
		
		/**
		 * public boolean isEmpty():判断当前集合是否为空
		 */
		boolean b6 = coll.isEmpty();
		System.out.println("b6:" + b6);//b6:false
		
		/**
		 * public int size():返回集合中元素的个数
		 */
		int num = coll.size();
		System.out.println("集合中元素个数:" + num);//集合中元素个数:4
		
		//public Object[] toArray():把集合中的元素，存储到数组中
		Object[] array = coll.toArray();
		for (int i = 0; i < array.length; i++) {
			System.out.println(array[i]);//张三 李四 王五 田七
		}
		/**
		 * public void clear():清空集合中所有的元素,但是不删除集合，集合还存在
		 */
		coll.clear();
		System.out.println(coll);//[]
		System.out.println(coll.isEmpty());//true
	}
}
