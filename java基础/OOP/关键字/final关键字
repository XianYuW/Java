final关键字代表最终的、不可改变的。

常见的四种用法：
1.可以用来修饰一个类，格式
        public final class 类名称{ //。。。}
        含义：当前这个类不能有任何子类
        注意：一个类如果是final的，那么其中所有的成员方法都无法进行覆盖重写 
2.可以用来修饰一个方法
        当final关键字用来修饰一个方法的时候，这个方法就是最终方法，也就是不能覆盖重写。
        格式：
              修饰符 final 返回值类型 方法名称(参数列表){//方法体}
        注意：对于类、方法来说，abstract关键字和final关键字不能同时使用，因为矛盾
        
3.用来修饰一个局部变量
        一旦使用final用来修饰局部变量，那么这个变量就不能进行修改
        一次赋值，终生不变
        
        正确写法：final int num; num = 30;
        错误写法：final int num = 200; num = 250;//错误写法，不能改变
        
        
        对于基本类型来说，不可改变说的是变量当中的数据不可改变
        对于引用类型来说，不可改变说的是变量当中的地址值不可改变
              例：Student stu1 = new Student("张三"); stu1 = new Student("李四");//正确，改变的是stu1指向的地址值
                  【final Student stu2 = new Student("王权富贵儿"); //王权富贵儿 
                    stu2 = new Student("王富贵");//错误，final的引用类型变量，地址不可改变
                    stu2.setName("王富贵");//王富贵】
                  
4.用来修饰一个成员变量
        对于成员变量来说，如果使用final关键字修饰，那么这个变量也照样是不可变
            1.由于成员变量具有默认值，所以用了final之后必须手动赋值，不会再给默认值了
            2.对于final的成员变量，要么直接赋值，要么通过构造方法赋值，二者选其一
            3.必须保证类当中所有重载的构造方法，都最终会对final的成员变量进行赋值
