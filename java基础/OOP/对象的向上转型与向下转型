对象的向上转型，其实就是多态写法，格式： 
                                      父类名称 对象名 = new 子类名称();    例如： Animal animal = new Cat();
                                      含义：右侧创建一个子类对象，把他当作父类看待使用。（创建了一只猫，当作动物看待）
                                      
※注意事项：
           >向上转型一定是安全的，从小范围转向了大范围，小范围的猫转向了更大范围的动物
              类似于： double num = 100；//正确，int-->double，自动类型转换
              
              
对象的向下转型，其实是一个【还原】动作。格式：
                                      子类对象  对象名 = (子类名称)父类对象；
                                      含义：将父类对象，【还原】成本来的子类对象
                                例如：
                                    Animal animal = new Cat();
                                    Cat cat = (Cat)animal;//正确
                                    Dog dog = (Dog)animal;//错误，本来new的时候是一只猫，现在非要当作狗
                                                          //错误写法，编译不会报错，但是运行会报异常java.lang.ClassCatException,类转换异常
                                                          
※注意事项：
          
          >必须保证对象本来创建的时候，就是猫，才能向下转型成为猫
          >如果对象创建的时候本来不是猫，现在非要向下转型成为猫，就会报错。ClassCatException,类转换异常
   类似于    基本数据类型给转换：   int num = (int) 10.0;//可以    int num = (int) 10.5;//不可以，精度损失
