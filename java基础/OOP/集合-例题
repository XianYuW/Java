题目一：
生成6个1~33之间的随机数，添加到集合，并遍历集合

import java.util.ArrayList;
import java.util.Random;

public class ArrayListRandom{
    public static void main(String[] args){
    
        ArrayList<Integer> list = new ArrayList<>();
        Random r = new Random();
        
        int num;
        
        for(int i = 0; i < 6; i++){
            num = (r.nextInt(32) + 1); 
            list.add(num);
        }
        
        //遍历集合
        for(int j = 0; j < list.size(); j++){
            System.out.println(lis.get(j));
        }
    }
}

题目二：
    自定义4个学生对象，添加到集合，并遍历
    
class Student{
    private String name;
    private int age;
    
    public Student(){
    }
    
    public Student(String nme,int age){
        super();
        this.name = name;
        this.age = age;
    }
    //getter和setter方法省略
}
public class ArrayListStudent{
    publi static void main(String[] args){
        ArrayList<Student> stu = new ArrayList<>();
        
        Student one = new Student("张三",20);
        Student two = new Student("李四",18);
        Student three = new Student("王五",16);
        Student four = new Student("二狗",22);
        
        stu.add(one);
        stu.add(two);
        stu.add(three);
        stu.add(four);
        
        //遍历集合
        for(int i = 0;i < stu.size(); i++ ){
            Student student = stu.get(i);
            Sytem.out.println("姓名为：" + student.getName() + ",年龄为：" + student.getAge());
            //疑问：此时如果直接打印stu，打印出来的是什么
        }
    }
}

题目三：
    用一个大集合存入20个随机数字，然后筛选出其中的偶数元素，将其存入小集合中
    要求使用自定义的方法实现筛选(该方法的三要素：返回值类型（ArrayList 小集合）、方法名称（getSmall）、参数列表（ArrayList 大集合）)
    
public class ListReturn{
    public static void mainString[] args){
        ArrayList<Integer> big = new ArrayList<>();
        random r = new Random();
        
        //将生成的随机数放入集合中
        for(int i = 0; i < 20 ;i++){
            int num = r.nextInt(100) + 1;//num 的范围 1~100
            big.add(num);
        }
        
        ArrayList<Integer> smallList = getSmall(big);//用smallList接收 返回的小集合
        
        //遍历小集合
        for(int i = 0; i < smallList.size(); i++){
            System.out.println(smallList.get(i));
        }
        
    }
    
    //该方法接受大集合参数，返回小集合结果
    public static Arraylist<Integer> getSmall(ArrayList<Integer> bigList){
        ArrayList<Integer> small = new ArrayList<>();
        
        for(int i = 0;i < big.size(); i++){
            int num = big.get(i);
            if(num % 2 == 0){
                small.add(num);
            }
        }
        
        return small;
    }
}
