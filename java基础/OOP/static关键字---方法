一旦使用static关键字修饰成员方法，那么这就成为了静态方法。
静态方法不属于对象，而是属于类的。

如果没有static关键字，那么必须首先创建对象，然后通过对象才能使用它。

对于静态方法来说，可以通过对象名来调用它，也可以直接通过类名称调用
如果有了static关键字，那么不需要创建对象，直接就能啊通过类名称来使用它

无论是成员变量还是成员方法，如果有了static，都推荐使用类名称进行调用

静态变量：类名称.静态变量
静态方法：类名称.静态变量

  注：
    >静态只能直接访问静态，不能直接访问非静态。
          原因：因为在内存当中是【先】有的静态内容，【后】有的非静态内容
          ”先人不知道后人，但是后人知道先人“
    >静态方法不能使用this
          原因：this代表当前对象，通过谁调用的方法，谁就是当前对象
          
public class Myclass {
	
	int num;//成员变量
	static int numStatic;//静态变量
	
	//成员方法
	public void method() {
		System.out.println("这是一个成员方法");
		System.out.println(num);//成员方法可以访问成员变量
		System.out.println(numStatic);//成员方法可以访问静态变量
	}
	//静态方法
	public static void methodStatic() {
		System.out.println("这是一个静态方法");
		System.out.println(numStatic);//静态方法可以访问静态变量
//		System.out.println(num);//错误写法！！
	}
}


public class MyclassTest {
	public static void main(String[] args) {
		Myclass test = new Myclass();
		//成员方法的调用
		test.method();
		//静态方法的调用
		test.methodStatic();//正确，不推荐，这种写法在编译之后也会被javac翻译成"类名称.静态方法名"
		Myclass.methodStatic();//正确，推荐
		
		//对于本类当中的静态方法，可以省略类名称
		MyMethod();
		MyclassTest.MyMethod();//与上面一个完全等效
	}
	public static void MyMethod() {
		System.out.println("this is my method!!");
	}
}
