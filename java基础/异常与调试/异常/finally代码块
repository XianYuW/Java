finally：有一些特定的代码无论异常是否发生，都需呀执行。
另外，因为异常会引发程序跳转，导致有些语句执行不到，而finally可以解决。
finally代码块中的语句都是一定要执行的

格式：
    try{
        可能产生异常的代码
    }catch(定义一个异常的变量，用来接收try中抛出的异常对象){
        异常的处理逻辑，产生异常对象之后，怎么处理异常
        一般 会把异常的信息记录到一个日志中
    }
    ...
    catch(异常类名 变量名){
    
    }finally{
        无论是后出现异常都会执行
    }
    
    注：
    1.finally不能单独使用，必须要和try...catch一起使用
    2.finally一般用于资源释放(资源回收)，无论程序是否出现异常，最后都要资源释放
    
