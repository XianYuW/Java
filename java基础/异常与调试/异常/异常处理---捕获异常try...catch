try...catch:异常处理的第二种方式，自己处理异常
格式：
    try{
        可能产生异常的代码
    }catch(定义一个异常的变量，用来接收try中抛出的异常对象){
        异常的处理逻辑，产生异常对象之后，怎么处理异常
        一般 会把异常的信息记录到一个日志中
    }
    ...
    catch(异常类名 变量名){
    
    }
    
    注：
        1.try中可能会抛出多个异常对象，那么就可以使用多个catch来处理这些异常对象
        2.如果try中产生了异常，那么就会执行catch中的异常处理逻辑，执行完毕后继续执行try...catch之后的代码
            如果没有产生异常，那么就不会执行catch中的异常处理逻辑，执行完try之后，直接执行catch之后的代码
            
//代码练习
public class DemoTryCatch {
	public static void main(String[] args) {
		try {
			readFile("c:\\b.tt");
		} catch (IOException e) {
			// TODO Auto-generated catch block
//			e.printStackTrace();//java.io.IOException: 文件后缀错误
			System.out.println("传递的文件后缀不是：txt");//传递的文件后缀不是：txt
		}
		System.out.println("后续代码");
	}
	private static void readFile(String fileName) throws IOException{
		if(!fileName.endsWith(".txt")) {
			throw new IOException("文件后缀错误");
		}
		System.out.println("后缀正确，打开文件");
	}
}
