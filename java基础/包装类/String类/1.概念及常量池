String类的概念：
    java.lang.String 类用于描述字符串
    该类由final关键字修饰，表示该类不能被继承
    从JDK1.9开始该类的底层不再由char[]存储数据，而是改成bytr[]加上编码标记，从而节约空间：
        源码：private final byte[] value;
    该类描述的字符串内容是个常量，不可更改，因此可以共享使用
    
    
常量池的概念：
    由于String类型描述的字符串内容是常量不可改变，因此java虚拟机将首次出现的字符串放入常量池中，
    若后续代码中出现了相同字符串内容则直接使用常量池中已有的字符串对象
    从而无需再次申请内存以及创建对象，从而提高了性能。


//代码练习


        String str1 = "hello";//常量池
        String str2 = "hello";//常量池
        String str3 = new String("hello");//堆内存
        String str4 = new String("hello");//堆内存
        
        System.out.println(str1 == str2);//比较地址，true
        
        System.out.println(str3 == str4);//比较地址，false
        
        System.out.println(str2 == str4);//比较地址，false

        //常量有优化机制，变量没有
        String srt5 = "abcd";
        String str6 = "ab"+"cd";//常量优化机制："abcd"
        System.out.println(str5 == str6);//比较地址，true
        
        String srt7 = "abcd";
        String str8 = str5+"cd";//str7不是常量，是一个变量，因此不会进行常量优化
        System.out.println(str7 == str8);//比较地址，false


