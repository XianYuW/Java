
##反射：框架设计的灵魂
    *框架：半成品软件。可以在框架的基础上进行软件开发，简化代码
    *反射：将类的各个组成部分封装为其他对象，这就是反射机制
              好处：1.可以在程序运行过程中，操作这些对象   例如：String str = "abc";
                                                   在ecplice里str.后面 会出现许多方法，就是利用反射机制实现的
                    2.可以解耦，提高程序的可扩展性
                    
                    
     *获取class对象的方式：
            1.class.forName("全类名")：将字节码文件加载进内存，返回class对象
                  >多用于配置文件，将类名定义在配置文件中，选取文件，加载类
                  
            2.类名.class：通过类名的属性class获取
                  >多用于参数的传递
            3.对象.getClass()：getClass()方法Object类中定义
                  >多用于对象的获取字节码的方式 
            
            结论：同一个字节码文件(*.class)在一次程序运行过程中，只会被加载一次不论通过哪一种方式获取的class对象都是同一个
            

class对象功能：
        *获取功能：
                1.获取成员变量：
                        *Field[] getFields()
                        *Field getField(String name)
                        
                        *Field[] getDeclaredFields()
                        *Field getDeclaredField(String name)
                2.获取构造方法：
                        *Constructor<?>[] getConstructors()
                        *Constructor<T> getConstructor(类<?>...parameterTypes)
                        
                        *Constructor<T> getDeclaredConstructor(类<?>...parameterTypes)
                        *Constructor<?> getDeclaredConstructors()
                3.获取成员方法：
                        *Method[] getMethods()
                        *Method getMethod(String name,类<?>...parameterTypes)
                        
                        *Method[] getDeclaredMethods()
                        *method getDeclareMethod(String name,类<?>...parameterTypes)
                4.获取类名：
                        *String getName()
      
