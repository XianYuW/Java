/**
 * TCP通信的服务端：接收客户端的请求，接收客户端发送的数据，给客户端回写数据
  * 表示服务器的类：
 * 		java.net.ServerSocket:此类实现服务器套接字
 * 
  * 构造方法：
 * 		ServerSocket(int port)创建绑定到特定端口的服务器套接字
 * 
  * 服务器必须明确一件事情，必须知道是哪个客户端请求的服务器
  * 所以可以使用accept方法获取到请求的客户端对象Socket
  *成员方法：
 *  	Socket accept()侦听并接受此套接字的连接
 *  
  *  服务器的实现步骤：
 *  	1.创建服务器ServerSocket对象，绑定系统指定的端口号
 *  	2.使用ServerSocket对象中的方法accept，获取到请求的客户端对象Socket
 *  	3.使用Socker对象中的方法InputStream获取网络字节输入流InputStream对象
 *  	4.使用网络字节输入流inputStream对象中的方法read，读取客户端发送的数据	
 *  	5.使用Socket对象中的方法OutputStream获取网络字节输出流OutputStream对象
 *  	6.使用网络字节输出流OutputStream对象中的方法write，给客户端回写数据
 *  	7.释放资源(Socket,ServerSocket)
 */
public class TCPServer {
	public static void main(String[] args) throws IOException {
		 //1.创建服务器ServerSocket对象，绑定系统指定的端口号
		ServerSocket server = new ServerSocket(8888);
		 //2.使用ServerSocket对象中的方法accept，获取到请求的客户端对象Socket
		Socket socket = server.accept();
		 //3.使用Socker对象中的方法InputStream获取网络字节输入流InputStream对象
		InputStream is = socket.getInputStream();
		 //4.使用网络字节输入流inputStream对象中的方法read，读取客户端发送的数据	
		System.out.println("读取客户端发送的数据:");
		byte[] b = new byte[1024];
		int len = is.read(b);
		System.out.println(new String(b,0,len));
//		*********为什么使用另一种字节输入流打印会出错？
//		int len;
//		while((len = is.read(b))!= -1) {
//			System.out.println(new String(b,0,len));
//			return;
//		}
		System.out.println("读取完成");
		System.out.println("开始给客户端回写数据");
		 //5.使用Socket对象中的方法OutputStream获取网络字节输出流OutputStream对象
		OutputStream os = socket.getOutputStream();
		 //6.使用网络字节输出流OutputStream对象中的方法write，给客户端回写数据
		os.write("收到，我是客户端回写的数据".getBytes());
		System.out.println("回写完成！！");
		 //7.释放资源(Socket,ServerSocket)
		socket.close();
		server.close();
	}
}
