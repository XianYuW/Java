一次写入一个字节：
//代码练习
    public class DemoOutputStream {
      //一次写入一个字节
      public static void main(String[] args) throws IOException {
        FileOutputStream fos = new FileOutputStream("src\\DemoIO\\a.txt");
        fos.write(97);
        fos.close();

      }
    }

一次写入多个字节
//代码练习
    public class DemoOutputStream2 {
      public static void main(String[] args) throws IOException {
        //一次写入多个字节
        //创建FileOutputStream对象，构造方法中绑定要写入数据的目的地
        FileOutputStream fos = new FileOutputStream(new File("src\\DemoIO\\b.txt"));

        //write(bytr[] b):一次写多个字节
        //			如果写的第一个字节是正数(0~127),那么显示的时候会查询ASCII表
        //			如果写的第一个字节是负数,那么第一个字节会和第二个字节组成一个中文显示，会查询系统默认码表（GBK）
        byte[] b = {65,66,67,68,69};//65--A  [A,B,C,D,E]
    //		byte[] b = {-65,-66,-67,68,69};//{烤紻E}
        fos.write(b);

        //write(byte[] b,int off, int len): off 数组的开始索引，len 写入的数组长度
        fos.write(b, 1, 3);//BCD

        //写入字符的方法：用String类型的方法将字符串转换为字节数组： byte[] getBytes()
        byte[] bytes = "你好".getBytes();
        fos.write(bytes);//你好
        //释放资源
        fos.close();
      }
    }
