/**
 * java.io.OutputStreamWriter extends  Writer
 * OutputStreamWriter:是字符流向字节的桥梁：可以使用指定的charset将要写入流中的字符编码成字节。
 * 
 * 继承自父类的共性成员方法：
 * 		-void write(int c)写入单个字符
 * 		-void write(char[] cbuf)写入字符数组
 * 		-abstract void write(char[] cbuf,int off,int len)写入字符数组的某一部分，
 * 									off开始索引，len写入的字符个数
 * 		-void write(String str)写入字符串
 * 		-void write(String str,int off,int len)写入字符串的某一部分
 * 								off开始索引，len写入的字符个数
 * 		-void flush()刷新该流的缓冲
 * 		-void close()关闭此流，会先执行刷新操作，再关闭
 * 
 * 构造方法：
 * 		OutputStreamWriter(OutputStream out)创建使用默认字符编码的OutputStreamWriter。
 * 		OutputStreamWriter(OutputStream out,String charsetName)创建使用指定字符集的OutputStreamWriter.
 * 
 * 		参数：
 * 			OutputStream out
 * 			String charsetName：指定的编码表名称，不区分大小写，可以是utf-8/UTF-8，GBK/gbk，...不指定默认使用UTF-8
 * 
 * 使用步骤：
 * 		1.创建OutputStreamWriter对象，构造方法中传递字节输出流和指定的编码表名称
 * 		2.使用OutputStreamWriter对象中的方法write，把字符转换为字节存储到缓冲区中(编码)
 * 		3.使用OutputStreamWriter对象中的 方法flush，把内存缓冲区中的字节刷新到文件中(使用字节流写字节的过程)
 * 		4.释放资源
 */
public class DemoOutputStreamWriter {
	public static void main(String[] args) throws IOException {
		write_utf_8();
		write_gbk();
	}
	/**
	 * 使用转换流OutputStreamWriter写GBK格式的文件
	 * @throws FileNotFoundException 
	 * @throws UnsupportedEncodingException 
	 */
	private static void write_gbk() throws IOException {
		//1.创建OutputStreamWriter对象，构造方法中传递字节输出流和指定的编码表名称
		OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("src\\DemoTransfersStream\\GBK.txt",true),"GBK");
		//2.使用OutputStreamWriter对象中的方法write
		osw.write(97);
		osw.write(98);
		osw.write(99);
		osw.write("你好");
		osw.write("这是GBK格式的文件");
		//3.使用OutputStreamWriter对象中的 方法flush
		osw.flush();
		//4.释放资源
		osw.close();	
	}
	/**
	 * 使用转换流OutputStreamWriter写utf-8格式的文件
	 * @throws IOException 
	 * @throws UnsupportedEncodingException 
	 */
	private static void write_utf_8() throws UnsupportedEncodingException, IOException {
		//1.创建OutputStreamWriter对象，构造方法中传递字节输出流和指定的编码表名称
		OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("src\\DemoTransfersStream\\utf-8.txt",true),"UTF-8");
		//2.使用OutputStreamWriter对象中的方法write
		osw.write(97);
		osw.write(98);
		osw.write(99);
		osw.write("你好");
		//3.使用OutputStreamWriter对象中的 方法flush
		osw.flush();
		//4.释放资源
		osw.close();
	}
}
