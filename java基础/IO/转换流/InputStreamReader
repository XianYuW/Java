/**
 * java.io.InputStreamReader extends Reader;
 * InputStreamReader:是字节流通向字符流的桥梁；它使用指定的charset读取字节并将其解码为字符。
 * 
 * 继承自父类的共性成员方法：
 * 		int read()读取单个字符并返回
 * 		int read(char[] cbuf)一次读取多个字符，将字符读入该数组
 * 		void close() 关闭该流并释放与之相关联的所有资源
 * 
 * 构造方法：
 * 		InputStreamReader(InputStream in)创建一个使用默认字符集的InputStreamReader
 * 		InputStreamReader(InputStream in,String charsetName)创建一个使用指定字符集的InputStreamReader
 * 		参数：
 * 			InputStream in：字节输入流，用来读取文件中保存的字节
 * 			String charsetName：指定的编码表名称，不区分大小写，可以是utf-8/UTF-8，GBK/gbk，...不指定默认使用UTF-8
 * 使用步骤：
 * 		1.创建InputStreamReader对象，构造方法中传递字节输入流和指定的编码名称
 * 		2.使用InputStreaamReader对象中的方法read，读取文件
 * 		3.释放资源
 * 		注意事项：
 * 			构造方法中指定的编码表名称要和文件的编码相同，否则会发生乱码
 */
 //代码练习
public class DemoInputStreamReader {
	public static void main(String[] args) throws IOException {
		read_utf_8();
		read_gbk();
	}
	/**
	 * 使用InputStreamReader读取GBK格式的文件
	 * @throws IOException 
	 */
	private static void read_gbk() throws IOException {
		//1.创建InputStreamReader对象，构造方法中传递字节输入流和指定的编码名称
		InputStreamReader isr = new InputStreamReader(new FileInputStream("src\\DemoTransfersStream\\GBK.txt"), "gbk");
  		//2.使用InputStreaamReader对象中的方法read，读取文件
		char[] c = new char[1024];
		int len ;//每次读取的有效字节数
		while((len = isr.read(c)) != -1) {
			/*
			 * String 类的构造方法
			 * String(char[] value)把字符数组转换为字符串
			 * String(char[] value,int off,int count)把字符数组的一部分转换为字符串
			 */
			System.out.println(new String(c,0,len));//abc你好这是GBK格式的文件
		}
  		//3.释放资源
		isr.close();
	}
	/**
	 * 使用InputStreamReader读取utf-8格式的文件
	 * @throws IOException 
	 */
	private static void read_utf_8() throws  IOException {
  		//1.创建InputStreamReader对象，构造方法中传递字节输入流和指定的编码名称
		InputStreamReader isr = new InputStreamReader(new FileInputStream("src\\DemoTransfersStream\\utf-8.txt"), "utf-8");
  		//2.使用InputStreaamReader对象中的方法read，读取文件
		int len ;
		while((len= isr.read())!= -1) {
			System.out.println((char)len);
		}
  		//3.释放资源
		isr.close();
	}

}
