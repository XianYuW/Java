/**
	例如java.lang.Runnable接口是一个函数式接口
	假设有一个startThread方法使用该接口作为函数，那么就可以使用Lambda进行传参
	这种情况和Thread类的构造方法为Runnable的参数没有本质区别
 */
public class Demo3Runnable {
	public static void startThread(Runnable run) {
		//开启多线程
		new Thread(run).start();
	}
	public static void main(String[] args) {
		//调用startThread方法，方法参数是一个接口
		
		//传递接口的匿名内部类
		startThread(new Runnable() {
			@Override
			public void run() {
				// TODO Auto-generated method stub
				System.out.println(Thread.currentThread().getName()+"-->"+"线程启动了");
			}});
		//传递Lambda表达式
		startThread(()->{
			System.out.println(Thread.currentThread().getName()+"-->"+"线程启动了!");
		});
		//简化Lambda
		startThread(()->System.out.println(Thread.currentThread().getName()+"-->"+"线程启动了！!"));
	}
}
